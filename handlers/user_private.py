from aiogram import Router, types, F
from aiogram.filters import Command

from filters.users_filter import BlockedUsersFilter

from kbds.inline import get_callback_btns
from database.queries import (
    orm_get_tariffs
)

user_private_router = Router()
user_private_router.message.filter(BlockedUsersFilter())

@user_private_router.message(Command("start"))
async def start(message: types.Message):
	await message.answer("hello", reply_markup=get_callback_btns(btns={"üìÑ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É": "choosesubscribe", "üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É": "check_subscription", "ü§ù —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–∞": "referral_program", "‚ùì FAQ": "faq", "‚òé –ü–æ–¥–¥–µ—Ä–∂–∫–∞": "support"}, sizes=(1,1,1,2)))


@user_private_router.callback_query(F.data == 'choosesubscribe')
async def choose_subscribe(callback, session):
    tariffs = await orm_get_tariffs(session)
    btns = {}
    for i in tariffs:
        if i.sub_time > 1:
            btns[f'{i.sub_time} –º–µ—Å—è—Ü–µ–≤, {i.price} ‚ÇΩ'] = str(i.id)
        else:
            btns[f'{i.sub_time} –º–µ—Å—è—Ü, {i.price} ‚ÇΩ'] = 'buy_' + str(i.id)
    
    await callback.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ', reply_markup=get_callback_btns(btns=btns, sizes=(1,)))







